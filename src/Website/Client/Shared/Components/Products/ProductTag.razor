@if (Tag != null)
{
    <span title="@Tag.Title" class="small" style="padding: 0 0.5rem; border-radius: 50rem; color: @Tag.Color; background-color: @Tag.BackgroundColor;">
        @Tag.Title
        @if (RemoveButton)
        {
            <a class="btn product-tag-button" @onclick:preventDefault @onclick="() => HandleTagRemove()"><i class="fas fa-minus" style="vertical-align: initial; color: inherit;"></i></a>
        }
    </span>
}

<style>
    .product-tag-button {
        transition: opacity 0.25s;
        opacity: 1.0;
        color: inherit;
        font-size: x-small;
        padding: 0.25rem 0.25rem 0.25rem 0.5rem;
    }

    .product-tag-button:hover {
        transition: opacity 0.25s;
        opacity: 0.4;
    }
</style>

@code {
    [Parameter]
    public MProductTag Tag { get; set; }
    [Parameter]
    public bool RemoveButton { get; set; } = false;
    [Parameter]
    public EventCallback<MProductTag> OnTagRemove { get; set; }

    private async Task HandleTagRemove()
    {
        await OnTagRemove.InvokeAsync(Tag);
    }
}
