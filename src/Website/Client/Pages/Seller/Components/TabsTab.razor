
<div class="mb-3 d-flex align-items-center">
    <h5>All Tabs</h5>
    <div class="ms-auto">
        <button class="btn btn-primary" @onclick="CreateTab">
            Add New Tab
        </button>
    </div>
</div>
<div class="mb-3">    
    <ul class="list-group">
        @foreach (var tab in Product.Tabs)
        {
            <li class="list-group-item list-group-item-action @(Tab == tab ? "active" : "")" 
                @onclick="() => EditTab(tab)" style="cursor: pointer;">
                @tab.Title
            </li>
        }
    </ul>
</div>


@if (Tab != null)
{
    <div class="mb-3 border border-1 border-secondary rounded-3 shadow-lg p-3">
        <EditForm Model="Tab" OnValidSubmit="SubmitAsync">

            <div class="mb-3">
                <label class="form-label">Title</label>
                <InputText class="form-control" @bind-Value="Tab.Title" />
                <div class="form-text">Up to 30 characters</div>
            </div>

            <div class="mb-3">
                <BlazoredTextEditor @ref="editor" DebugLevel="error">
                    <ToolbarContent>
                        <select class="ql-header">
                            <option selected=""></option>
                            <option value="1"></option>
                            <option value="2"></option>
                            <option value="3"></option>
                            <option value="4"></option>
                            <option value="5"></option>
                        </select>
                        <span class="ql-formats">
                            <button class="ql-bold"></button>
                            <button class="ql-italic"></button>
                            <button class="ql-underline"></button>
                            <button class="ql-strike"></button>
                        </span>
                        <span class="ql-formats">
                            <select class="ql-color"></select>
                            <select class="ql-background"></select>
                        </span>
                        <span class="ql-formats">
                            <button class="ql-list" value="ordered"></button>
                            <button class="ql-list" value="bullet"></button>
                        </span>
                        <span class="ql-formats">
                            <button class="ql-link"></button>
                        </span>
                        <span class="ql-formats">
                            <button class="ql-code-block"></button>
                        </span>
                    </ToolbarContent>
                    <EditorContent>
                        @(new MarkupString(Tab.Content))
                    </EditorContent>
                </BlazoredTextEditor>
            </div>

            <div class="mb-3 form-check">
                <InputCheckbox @bind-Value="Tab.IsEnabled" class="form-check-input" id="tabIsEnabledCheck" />
                <label class="form-check-label" for="tabIsEnabledCheck">Is Enabled</label>
            </div>

            <DataAnnotationsValidator />
            <ValidationSummary />            

            <div class="mb-3">
                <div class="float-right">

                    @if (Tab.Id != default)
                    {
                        @if (isLoading2)
                        {
                            <LoadingButton />
                        }
                        else
                        {
                            <button type="button" class="btn btn-danger me-2" @onclick="DeleteAsync">Delete</button>
                        }
                    }

                    @if (isLoading)
                    {
                        <LoadingButton />
                    }
                    else
                    {
                        @if (Tab.Id == default)
                        {
                            <button type="submit" class="btn btn-primary">Add</button>
                        }
                        else
                        {
                            <button type="submit" class="btn btn-primary">Update</button>
                        }
                    }

                </div>
            </div>
        </EditForm>
    </div>    
}



@code {
    [Parameter]
    public ProductModel Product { get; set; }

    [Inject]
    public HttpClient HttpClient { get; set; }
    [Inject]
    public IJSRuntime JsRuntime { get; set; }

    private ProductTabModel Tab { get; set; }

    private BlazoredTextEditor editor;

    private string htmlString => Tab.Content;


    private void EditTab(ProductTabModel tab)
    {
        Tab = tab;
    }

    private void CreateTab()
    {
        Tab = new ProductTabModel() { IsEnabled = true };
    }

    private bool isLoading2;
    private async Task DeleteAsync()
    {
        isLoading2 = true;
        await HttpClient.DeleteAsync($"api/products/tabs/{Tab.Id}");
        Product.Tabs.Remove(Tab);
        Tab = null;
        isLoading2 = false;
    }

    private bool isLoading;
    private async Task SubmitAsync()
    {
        isLoading = true;

        Tab.Content = await editor.GetHTML();

        if (Tab.Id == default)
        {
            Tab.ProductId = Product.Id;
            var response = await HttpClient.PostAsJsonAsync("api/products/tabs", Tab);
            Product.Tabs.Add(await response.Content.ReadFromJsonAsync<ProductTabModel>());
            Tab = new ProductTabModel();
        } else
        {
            await HttpClient.PutAsJsonAsync("api/products/tabs", Tab);
        }

        Tab = null;

        isLoading = false;
    }
}
