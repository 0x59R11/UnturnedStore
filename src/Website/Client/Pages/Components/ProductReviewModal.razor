<div class="modal" tabindex="-1" id="@nameof(ProductReviewModal)" data-bs-backdrop="static" data-bs-keyboard="false" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">
                    @text your review for @Product.Name
                </h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <EditForm Model="Review" OnValidSubmit="SubmitAsync">
                <div class="modal-body">
                    <div class="mb-3">
                        <label class="form-label">Title</label>
                        <InputText class="form-control" @bind-Value="Review.Title" />
                        <div class="form-text">Title of your review</div>
                    </div>

                    <div class="mb-3">
                        <label class="form-label">Rating</label>
                        <div class="d-flex">
                            <i class="bi @GetRatingClass(1)" style="cursor: pointer;" @onclick="() => ChangeRating(1)"></i>
                            <i class="bi @GetRatingClass(2)" style="cursor: pointer;" @onclick="() => ChangeRating(2)"></i>
                            <i class="bi @GetRatingClass(3)" style="cursor: pointer;" @onclick="() => ChangeRating(3)"></i>
                            <i class="bi @GetRatingClass(4)" style="cursor: pointer;" @onclick="() => ChangeRating(4)"></i>
                            <i class="bi @GetRatingClass(5)" style="cursor: pointer;" @onclick="() => ChangeRating(5)"></i>
                        </div>
                    </div>

                    <div class="mb-3">
                        <label class="form-label">Body</label>
                        <InputTextArea class="form-control" @bind-Value="Review.Body" rows="5" />
                        <div class="form-text">Body up to 2000 characters</div>
                    </div>

                    <DataAnnotationsValidator />
                    <ValidationSummary />
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                    @if (isLoading)
                    {
                        <LoadingButton />
                    }
                    else
                    {
                        <button type="submit" class="btn btn-primary">@text Review</button>
                    }
                </div>
            </EditForm>
        </div>
    </div>
</div>


@code {
    [Inject]
    public IJSRuntime JSRuntime { get; set; }
    [Inject]
    public HttpClient HttpClient { get; set; }

    [Parameter]
    public ProductModel Product { get; set; }
    [Parameter]
    public ProductReviewModel Review { get; set; }
    [Parameter]
    public EventCallback<ProductReviewModel> ReviewChanged { get; set; }

    private string text => Review.Id == 0 ? "Create" : "Update";

    private void ChangeRating(byte newRating)
    {
        Review.Rating = newRating;
    }

    private string GetRatingClass(byte rating)
    {
        if (rating < Review.Rating)
        {
            return "bi-star";
        }
        return "bi-star-fill";
    }

    public async Task ShowModalAsync()
    {
        await JSRuntime.ShowModalStaticAsync(nameof(ProductReviewModal));
    }

    private bool isLoading;
    public async Task SubmitAsync()
    {
        isLoading = true;
        if (Review.Id == 0)
        {
            var response = await HttpClient.PostAsJsonAsync("api/products/reviews", Review);
            Review = await response.Content.ReadFromJsonAsync<ProductReviewModel>();
        } else
        {
            await HttpClient.PutAsJsonAsync("api/products/reviews", Review);
        }
        isLoading = false;
    }
}